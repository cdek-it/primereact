@use "sass:math";

// core
.p-chips {
    display: inline-flex;
    height: min-content;
}

.p-disabled {
    .p-chips-multiple-container{
        background-color: $disabledButtonBg;
    }
}

.p-chips-multiple-container {
    outline-color: transparent;

    cursor: text;
    overflow: hidden;

    height: min-content;

    display: flex;
    flex-grow: 1;
    flex-wrap: wrap;
    align-items: center;
    gap: math.div($inlineSpacing, 2);

    margin: 0;

    list-style-type: none;

    &:has(.p-chips-token) {
        padding: math.div($inlineSpacing, 2);
    }
}

.p-chips-token {
    cursor: default;

    display: inline-flex;
    align-items: center;
    flex: 0 0 auto;

    height: $chipHeight;
}

.p-chips-input-token {
    flex: 1 1 auto;
    display: inline-flex;
}

.p-chips-token-icon {
    cursor: pointer;
}

.p-chips-input-token input {
    border: 0 none;
    outline: 0 none;
    background-color: transparent;
    margin: 0;
    padding: 0;
    box-shadow: none;
    border-radius: 0;
    width: 100%;
}

.p-fluid .p-chips {
    display: flex;
}

// theme
.p-chips {
    &:not(.p-disabled):hover {
        .p-chips-multiple-container {
            border-color: $inputHoverBorderColor;
        }
    }

    &:not(.p-disabled).p-focus {
        .p-chips-multiple-container {
            @include focused-input();
        }
    }

    .p-chips-multiple-container {        

        .p-chips-token {
            padding: $chipPadding;
            background: $chipBg;
            color: $chipTextColor;
            border-radius: $chipBorderRadius;

            &.p-focus {
                @include focused();
            }

            .p-chips-token-icon {
                margin-left: $inlineSpacing;
            }
        }

        .p-chips-token + .p-chips-input-token {
            padding: 0 $inlineSpacing;
        }

        .p-chips-input-token {
            padding: math.div(nth($inputPadding, 1), 2) 0;

            input {
                height: $chipHeight;
                
                font-family: var(--font-family);
                font-feature-settings: var(--font-feature-settings, normal);
                font-size: $inputTextFontSize;
                color: $textColor;

                margin: 0;
            }
        }
    }

    &.p-invalid.p-component > .p-inputtext {
        @include invalid-input();
    }
}
